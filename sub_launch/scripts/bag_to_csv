#!/usr/bin/env python

from __future__ import division

import math
import random
import sys

import numpy
import yaml

import roslib
roslib.load_manifest('sub_launch')
from tf import transformations
import rosbag

from uf_common.orientation_helpers import xyz_array, xyzw_array

# time
# actual  position, velocity, attitude
# desired position, velocity, attitude
# wrench

print 't,  px,py,pz, vx,vy,vz, qx,qy,qz,qw,  dpx,dpy,dpz, dvx,dvy,dvz, dqx,dqy,dqz,dqw,  fx,fy,fz, tx,ty,tz'


#

with rosbag.Bag(sys.argv[1]) as bag:
    t0 = None
    odom = None
    traj = None
    for topic, msg, t in bag.read_messages(topics=['/odom', '/trajectory', '/wrench']):
        if topic == '/odom':
            odom = msg
            continue
        if topic == '/trajectory':
            traj = msg
            continue
        wrench = msg
        
        if odom is None or traj is None:
            continue
        
        if t0 is None:
            t0 = t
        
        p = xyz_array(odom.pose.pose.position)
        v = xyz_array(odom.twist.twist.linear)
        q = xyzw_array(odom.pose.pose.orientation)
        dp = xyz_array(traj.posetwist.pose.position)
        dv = xyz_array(traj.posetwist.twist.linear)
        dq = xyzw_array(traj.posetwist.pose.orientation)
        wf = xyz_array(wrench.wrench.force)
        wt = xyz_array(wrench.wrench.torque)
        
        print ','.join(str(x) for x in [(t - t0).to_sec()] + list(p) + list(v) + list(q) + list(dp) + list(dv) + list(dq) + list(wf) + list(wt))
