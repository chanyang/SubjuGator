#!/usr/bin/env python

import argparse

import roslib; roslib.load_manifest('sub_launch')
import rospy
import actionlib

from uf_common import orientation_helpers
from uf_common.msg import MoveToAction

parser = argparse.ArgumentParser()
parser.add_argument('--square', action='store_true')
args = parser.parse_args()

rospy.init_node('grid_pattern')

client = actionlib.SimpleActionClient('moveto', MoveToAction)
client.wait_for_server()
go = client.send_goal_and_wait

print 'Waiting for current position...'
p = orientation_helpers.PoseEditor.from_Odometry_topic()

p = p.depth(.75).zero_roll_and_pitch(); go(p)

print 'Starting...'
if args.square:
    for i in xrange(4*4):
        print 'Side %i forward' % i
        p = p.forward(5); go(p)
        print 'Side %i turn' % i
        p = p.turn_left_deg(90); go(p)
else:
    for i in xrange(8):
        p = p.forward(10); go(p)
        p = p.turn_left_deg(90 if i%2==0 else -90); go(p)
        p = p.forward(2); go(p)
        p = p.turn_left_deg(90 if i%2==0 else -90); go(p)
