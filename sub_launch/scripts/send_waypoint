#!/usr/bin/env python

import argparse
import math

import roslib; roslib.load_manifest('sub_launch')
import rospy
import actionlib
from std_msgs.msg import Header
from geometry_msgs.msg import Pose, Quaternion, Point
from tf import transformations

from uf_common.msg import MoveToAction, MoveToGoal, PoseTwist

parser = argparse.ArgumentParser()
parser.add_argument('x', metavar='X', type=float)
parser.add_argument('y', metavar='Y', type=float)
parser.add_argument('z', metavar='Z', type=float)
parser.add_argument('Y', metavar='YAW', type=float, nargs='?', default=0)
parser.add_argument('P', metavar='PITCH', type=float, nargs='?', default=0)
args = parser.parse_args()

rospy.init_node('send_waypoint')
client = actionlib.SimpleActionClient('moveto', MoveToAction)
print 'Waiting for server...'
client.wait_for_server()

print 'Sending goal...'
print client.send_goal(MoveToGoal(
    header=Header(
        frame_id='/map',
    ),
    posetwist=PoseTwist(
        pose=Pose(
            position=Point(
                x=args.x,
                y=args.y,
                z=args.z,
            ),
            orientation=Quaternion(*transformations.quaternion_from_euler(0, math.radians(args.P), math.radians(args.Y))),
        ),
    ),
))
print 'Press enter to cancel...'
raw_input()
client.cancel_goal()
print 'Done.'
